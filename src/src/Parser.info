-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


terminal '{' is unused
terminal '}' is unused
terminal '"' is unused
terminal comment_val is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseInput -> Start                         (0)
	Start -> Declarations Statements                   (1)
	Declarations ->                                    (2)
	Declarations -> Declaration Declarations           (3)
	Statements ->                                      (4)
	Statements -> Statement Statements                 (5)
	VariableType -> int                                (6)
	VariableType -> float                              (7)
	VariableType -> string                             (8)
	VariableType -> error                              (9)
	Declaration -> var id_val ':' VariableType ';'     (10)
	Statement -> read id_val ';'                       (11)
	Statement -> print Expression ';'                  (12)
	Statement -> id_val '=' Expression ';'             (13)
	Statement -> if Expression then Statements ElseBlockFactor   (14)
	Statement -> while Expression do Statements done   (15)
	ElseBlockFactor -> endif                           (16)
	ElseBlockFactor -> else Statements endif           (17)
	Expression -> '(' Expression ')'                   (18)
	Expression -> '-' Expression                       (19)
	Expression -> Expression '+' Expression            (20)
	Expression -> Expression '-' Expression            (21)
	Expression -> Expression '*' Expression            (22)
	Expression -> Expression '/' Expression            (23)
	Expression -> int_val                              (24)
	Expression -> float_val                            (25)
	Expression -> id_val                               (26)
	Expression -> string_val                           (27)
	Expression -> error                                (28)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { TINT }
	float          { TFLOAT }
	string         { TSTRING }
	var            { TVAR }
	while          { TWHILE }
	do             { TDO }
	done           { TDONE }
	print          { TPRINT }
	read           { TREAD }
	if             { TIF }
	else           { TELSE }
	then           { TTHEN }
	endif          { TENDIF }
	'+'            { TADD }
	'-'            { TSUB }
	'*'            { TMULT }
	'/'            { TDIV }
	'='            { TEQUALS }
	'('            { T_OPAREN }
	')'            { T_CPAREN }
	'{'            { T_OBRACE }
	'}'            { T_CBRACE }
	'"'            { T_DQUOTE }
	';'            { T_SCOLON }
	':'            { T_COLON }
	id_val         { T_ID_VAL $$ }
	int_val        { T_INT_VAL $$ }
	float_val      { T_FLOAT_VAL $$ }
	string_val     { T_STRING_VAL $$ }
	comment_val    { T_COMMENT_VAL $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseInput rule  0
	Start           rule  1
	Declarations    rules 2, 3
	Statements      rules 4, 5
	VariableType    rules 6, 7, 8, 9
	Declaration     rule  10
	Statement       rules 11, 12, 13, 14, 15
	ElseBlockFactor rules 16, 17
	Expression      rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	var            shift, and enter state 4
	while          reduce using rule 2
	print          reduce using rule 2
	read           reduce using rule 2
	if             reduce using rule 2
	id_val         reduce using rule 2
	%eof           reduce using rule 2

	Start          goto state 5
	Declarations   goto state 2
	Declaration    goto state 3

State 1


	var            shift, and enter state 4

	Declarations   goto state 2
	Declaration    goto state 3

State 2

	Start -> Declarations . Statements                  (rule 1)

	while          shift, and enter state 10
	print          shift, and enter state 11
	read           shift, and enter state 12
	if             shift, and enter state 13
	id_val         shift, and enter state 14
	%eof           reduce using rule 4

	Statements     goto state 8
	Statement      goto state 9

State 3

	Declarations -> Declaration . Declarations          (rule 3)

	var            shift, and enter state 4
	while          reduce using rule 2
	print          reduce using rule 2
	read           reduce using rule 2
	if             reduce using rule 2
	id_val         reduce using rule 2
	%eof           reduce using rule 2

	Declarations   goto state 7
	Declaration    goto state 3

State 4

	Declaration -> var . id_val ':' VariableType ';'    (rule 10)

	id_val         shift, and enter state 6


State 5

	%start_parseInput -> Start .                        (rule 0)

	%eof           accept


State 6

	Declaration -> var id_val . ':' VariableType ';'    (rule 10)

	':'            shift, and enter state 28


State 7

	Declarations -> Declaration Declarations .          (rule 3)

	while          reduce using rule 3
	print          reduce using rule 3
	read           reduce using rule 3
	if             reduce using rule 3
	id_val         reduce using rule 3
	%eof           reduce using rule 3


State 8

	Start -> Declarations Statements .                  (rule 1)

	%eof           reduce using rule 1


State 9

	Statements -> Statement . Statements                (rule 5)

	while          shift, and enter state 10
	done           reduce using rule 4
	print          shift, and enter state 11
	read           shift, and enter state 12
	if             shift, and enter state 13
	else           reduce using rule 4
	endif          reduce using rule 4
	id_val         shift, and enter state 14
	%eof           reduce using rule 4

	Statements     goto state 27
	Statement      goto state 9

State 10

	Statement -> while . Expression do Statements done    (rule 15)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 26

State 11

	Statement -> print . Expression ';'                 (rule 12)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 25

State 12

	Statement -> read . id_val ';'                      (rule 11)

	id_val         shift, and enter state 24


State 13

	Statement -> if . Expression then Statements ElseBlockFactor    (rule 14)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 16

State 14

	Statement -> id_val . '=' Expression ';'            (rule 13)

	'='            shift, and enter state 15


State 15

	Statement -> id_val '=' . Expression ';'            (rule 13)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 44

State 16

	Statement -> if Expression . then Statements ElseBlockFactor    (rule 14)
	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	then           shift, and enter state 43
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38


State 17

	Expression -> error .                               (rule 28)

	do             reduce using rule 28
	then           reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	')'            reduce using rule 28
	';'            reduce using rule 28


State 18

	Expression -> '-' . Expression                      (rule 19)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 42

State 19

	Expression -> '(' . Expression ')'                  (rule 18)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 41

State 20

	Expression -> id_val .                              (rule 26)

	do             reduce using rule 26
	then           reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	')'            reduce using rule 26
	';'            reduce using rule 26


State 21

	Expression -> int_val .                             (rule 24)

	do             reduce using rule 24
	then           reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	')'            reduce using rule 24
	';'            reduce using rule 24


State 22

	Expression -> float_val .                           (rule 25)

	do             reduce using rule 25
	then           reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	')'            reduce using rule 25
	';'            reduce using rule 25


State 23

	Expression -> string_val .                          (rule 27)

	do             reduce using rule 27
	then           reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	')'            reduce using rule 27
	';'            reduce using rule 27


State 24

	Statement -> read id_val . ';'                      (rule 11)

	';'            shift, and enter state 40


State 25

	Statement -> print Expression . ';'                 (rule 12)
	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	';'            shift, and enter state 39


State 26

	Statement -> while Expression . do Statements done    (rule 15)
	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	do             shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38


State 27

	Statements -> Statement Statements .                (rule 5)

	done           reduce using rule 5
	else           reduce using rule 5
	endif          reduce using rule 5
	%eof           reduce using rule 5


State 28

	Declaration -> var id_val ':' . VariableType ';'    (rule 10)

	error          shift, and enter state 30
	int            shift, and enter state 31
	float          shift, and enter state 32
	string         shift, and enter state 33

	VariableType   goto state 29

State 29

	Declaration -> var id_val ':' VariableType . ';'    (rule 10)

	';'            shift, and enter state 53


State 30

	VariableType -> error .                             (rule 9)

	';'            reduce using rule 9


State 31

	VariableType -> int .                               (rule 6)

	';'            reduce using rule 6


State 32

	VariableType -> float .                             (rule 7)

	';'            reduce using rule 7


State 33

	VariableType -> string .                            (rule 8)

	';'            reduce using rule 8


State 34

	Statement -> while Expression do . Statements done    (rule 15)

	while          shift, and enter state 10
	done           reduce using rule 4
	print          shift, and enter state 11
	read           shift, and enter state 12
	if             shift, and enter state 13
	id_val         shift, and enter state 14

	Statements     goto state 52
	Statement      goto state 9

State 35

	Expression -> Expression '+' . Expression           (rule 20)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 51

State 36

	Expression -> Expression '-' . Expression           (rule 21)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 50

State 37

	Expression -> Expression '*' . Expression           (rule 22)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 49

State 38

	Expression -> Expression '/' . Expression           (rule 23)

	error          shift, and enter state 17
	'-'            shift, and enter state 18
	'('            shift, and enter state 19
	id_val         shift, and enter state 20
	int_val        shift, and enter state 21
	float_val      shift, and enter state 22
	string_val     shift, and enter state 23

	Expression     goto state 48

State 39

	Statement -> print Expression ';' .                 (rule 12)

	while          reduce using rule 12
	done           reduce using rule 12
	print          reduce using rule 12
	read           reduce using rule 12
	if             reduce using rule 12
	else           reduce using rule 12
	endif          reduce using rule 12
	id_val         reduce using rule 12
	%eof           reduce using rule 12


State 40

	Statement -> read id_val ';' .                      (rule 11)

	while          reduce using rule 11
	done           reduce using rule 11
	print          reduce using rule 11
	read           reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	endif          reduce using rule 11
	id_val         reduce using rule 11
	%eof           reduce using rule 11


State 41

	Expression -> '(' Expression . ')'                  (rule 18)
	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	')'            shift, and enter state 47


State 42

	Expression -> '-' Expression .                      (rule 19)
	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	do             reduce using rule 19
	then           reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	')'            reduce using rule 19
	';'            reduce using rule 19


State 43

	Statement -> if Expression then . Statements ElseBlockFactor    (rule 14)

	while          shift, and enter state 10
	print          shift, and enter state 11
	read           shift, and enter state 12
	if             shift, and enter state 13
	else           reduce using rule 4
	endif          reduce using rule 4
	id_val         shift, and enter state 14

	Statements     goto state 46
	Statement      goto state 9

State 44

	Statement -> id_val '=' Expression . ';'            (rule 13)
	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	';'            shift, and enter state 45


State 45

	Statement -> id_val '=' Expression ';' .            (rule 13)

	while          reduce using rule 13
	done           reduce using rule 13
	print          reduce using rule 13
	read           reduce using rule 13
	if             reduce using rule 13
	else           reduce using rule 13
	endif          reduce using rule 13
	id_val         reduce using rule 13
	%eof           reduce using rule 13


State 46

	Statement -> if Expression then Statements . ElseBlockFactor    (rule 14)

	else           shift, and enter state 56
	endif          shift, and enter state 57

	ElseBlockFactorgoto state 55

State 47

	Expression -> '(' Expression ')' .                  (rule 18)

	do             reduce using rule 18
	then           reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	')'            reduce using rule 18
	';'            reduce using rule 18


State 48

	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)
	Expression -> Expression '/' Expression .           (rule 23)

	do             reduce using rule 23
	then           reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	')'            reduce using rule 23
	';'            reduce using rule 23


State 49

	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression '*' Expression .           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	do             reduce using rule 22
	then           reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	')'            reduce using rule 22
	';'            reduce using rule 22


State 50

	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression '-' Expression .           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	do             reduce using rule 21
	then           reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	')'            reduce using rule 21
	';'            reduce using rule 21


State 51

	Expression -> Expression . '+' Expression           (rule 20)
	Expression -> Expression '+' Expression .           (rule 20)
	Expression -> Expression . '-' Expression           (rule 21)
	Expression -> Expression . '*' Expression           (rule 22)
	Expression -> Expression . '/' Expression           (rule 23)

	do             reduce using rule 20
	then           reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	')'            reduce using rule 20
	';'            reduce using rule 20


State 52

	Statement -> while Expression do Statements . done    (rule 15)

	done           shift, and enter state 54


State 53

	Declaration -> var id_val ':' VariableType ';' .    (rule 10)

	var            reduce using rule 10
	while          reduce using rule 10
	print          reduce using rule 10
	read           reduce using rule 10
	if             reduce using rule 10
	id_val         reduce using rule 10
	%eof           reduce using rule 10


State 54

	Statement -> while Expression do Statements done .    (rule 15)

	while          reduce using rule 15
	done           reduce using rule 15
	print          reduce using rule 15
	read           reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	endif          reduce using rule 15
	id_val         reduce using rule 15
	%eof           reduce using rule 15


State 55

	Statement -> if Expression then Statements ElseBlockFactor .    (rule 14)

	while          reduce using rule 14
	done           reduce using rule 14
	print          reduce using rule 14
	read           reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	endif          reduce using rule 14
	id_val         reduce using rule 14
	%eof           reduce using rule 14


State 56

	ElseBlockFactor -> else . Statements endif          (rule 17)

	while          shift, and enter state 10
	print          shift, and enter state 11
	read           shift, and enter state 12
	if             shift, and enter state 13
	endif          reduce using rule 4
	id_val         shift, and enter state 14

	Statements     goto state 58
	Statement      goto state 9

State 57

	ElseBlockFactor -> endif .                          (rule 16)

	while          reduce using rule 16
	done           reduce using rule 16
	print          reduce using rule 16
	read           reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	endif          reduce using rule 16
	id_val         reduce using rule 16
	%eof           reduce using rule 16


State 58

	ElseBlockFactor -> else Statements . endif          (rule 17)

	endif          shift, and enter state 59


State 59

	ElseBlockFactor -> else Statements endif .          (rule 17)

	while          reduce using rule 17
	done           reduce using rule 17
	print          reduce using rule 17
	read           reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	endif          reduce using rule 17
	id_val         reduce using rule 17
	%eof           reduce using rule 17


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 29
Number of terminals: 30
Number of non-terminals: 9
Number of states: 60
